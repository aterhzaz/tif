<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2010 Talend Inc. - www.talend.com -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
        http://cxf.apache.org/transports/jms
            http://cxf.apache.org/schemas/configuration/jms.xsd
        http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
        http://cxf.apache.org/jaxrs
            http://cxf.apache.org/schemas/jaxrs.xsd
        http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring.xsd">
 
    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/camel/cxf-extension-camel.xml" />

    <jaxrs:server address="camel://direct:bookStore" id="http-server">
        <jaxrs:serviceBeans>
            <ref bean="store" />
        </jaxrs:serviceBeans>
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>

    <bean id="store" class="service.BookStoreImpl">
        <property name="bookListener" ref="bookSender" />
    </bean>

    <bean id="bookSender" class="service.BookSender">
    </bean>
    
    <bean id="bookReceiver" class="service.BookReceiver">
    </bean>

    <camelContext id="camelContext" xmlns="http://camel.apache.org/schema/spring" trace="true">
    
        <!-- This route offers the cxf endpoint using a jms queue -->
        <route>
            <from uri="jms://test.bookStore" />
            <bean ref="stripPrefix" />
            <to uri="direct:bookStore" />
        </route>
        
        <!--  This route offers the cxf endpoint using an embedded jetty instance -->
        <route>
            <from uri="jetty:http://0.0.0.0:9002/bookstore?matchOnUriPrefix=true" />
            <bean ref="stripPrefix" />
            <to uri="direct:bookStore" />
        </route>

        <!-- Serialize the book from the bookListener using jaxb and send 
            the xml to a jms queue -->
        <route>
            <from uri="direct:bookListener" />
            <marshal>
                <jaxb prettyPrint="true" contextPath="talend.tif.examples.jaxrsjmshttp.common" />
            </marshal>
            <to uri="jms:test.books" />
        </route>
   

    </camelContext>

    <bean id="jms" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>

    <bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>
    
    <bean id="stripPrefix" class="service.StripPrefixProcessor">
    </bean>

    <bean id="jetty" class="org.apache.camel.component.jetty.JettyHttpComponent">
    </bean>
    
</beans>

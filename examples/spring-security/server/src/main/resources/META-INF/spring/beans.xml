<!-- 
    OSGI integration for the example
    
    Defines a camel servlet for OSGI that attaches to the OSGI HTTP service of the container.
    This servlet can then be used in your normal servlet routes. 
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi  http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
      
    <bean id="osgiServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>
     
    <osgi:service ref="osgiServlet">
        <osgi:interfaces>
            <value>javax.servlet.Servlet</value>
            <value>org.apache.camel.component.servlet.CamelServletService</value>
        </osgi:interfaces>
        <osgi:service-properties>
            <entry key="alias" value="/camel/services" />
            <entry key="servlet-name" value="CamelServlet"/>
        </osgi:service-properties>
    </osgi:service>
    

   <bean id="servlet" class="org.apache.camel.component.servlet.ServletComponent">
      <property name = "camelServletService" ref="osgiServlet" />
   </bean>

   <import resource="/camel-context.xml"/>
  
</beans>

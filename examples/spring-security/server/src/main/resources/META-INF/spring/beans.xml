<!-- 
    OSGI integration for the example
    
    Defines a camel servlet for OSGI that attaches to the OSGI HTTP service of the container.
    This servlet can then be used in your normal servlet routes. 
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi  http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
      
    <osgi:reference id="httpservice" interface="org.osgi.service.http.HttpService"/>
    
    <bean class="server.ServletRegisterer">
        <property name="alias" value="/spring-security"/>
        <property name="name" value="CamelHttpServlet" />
        <property name="httpService" ref="httpservice"/>
        <property name="servlet" ref="osgiServlet"/>
    </bean>
    
    <bean id="osgiServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>

   <bean id="servlet" class="org.apache.camel.component.servlet.ServletComponent">
      <property name = "camelServletService" ref="osgiServlet" />
   </bean>

   <import resource="classpath:/camel-context.xml"/>
  
</beans>
